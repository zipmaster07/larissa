# Generated by Django 4.2.3 on 2023-07-30 18:17

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Drill',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64)),
                ('description', models.TextField()),
                ('target_type', models.CharField(max_length=128)),
                ('target_url', models.URLField(max_length=255, null=True)),
                ('scoring_description', models.TextField()),
                ('notes', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'drill',
            },
        ),
        migrations.CreateModel(
            name='Firearm',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('type', models.PositiveSmallIntegerField(blank=True, choices=[(0, 'Sidearm'), (1, 'Long gun')], null=True)),
            ],
            options={
                'db_table': 'firearm',
            },
        ),
        migrations.CreateModel(
            name='Shooter',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=255)),
                ('last_name', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'shooter',
            },
        ),
        migrations.CreateModel(
            name='Skill',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128)),
                ('description', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'skill',
            },
        ),
        migrations.CreateModel(
            name='String',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('seqno', models.IntegerField(default=1)),
                ('distance', models.PositiveIntegerField(blank=True, null=True)),
                ('round_count', models.PositiveIntegerField()),
                ('sidearm_par_time', models.PositiveIntegerField(blank=True, null=True)),
                ('long_gun_par_time', models.PositiveIntegerField(blank=True, null=True)),
                ('instructions', models.TextField()),
                ('drill', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='scoring.drill')),
            ],
            options={
                'db_table': 'drill_string',
            },
        ),
        migrations.CreateModel(
            name='Score',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('event_date', models.DateField(auto_now_add=True)),
                ('score_time', models.PositiveIntegerField(blank=True, null=True)),
                ('generic_hits', models.PositiveIntegerField(blank=True, null=True)),
                ('a_zone_hits', models.PositiveIntegerField(blank=True, null=True)),
                ('c_zone_hits', models.PositiveIntegerField(blank=True, null=True)),
                ('d_zone_hits', models.PositiveIntegerField(blank=True, null=True)),
                ('mikes', models.PositiveIntegerField(blank=True, null=True)),
                ('points', models.PositiveIntegerField(blank=True, null=True)),
                ('penalties', models.PositiveIntegerField(blank=True, null=True)),
                ('from_concealment', models.BooleanField(blank=True, null=True)),
                ('distance', models.PositiveIntegerField(blank=True, null=True)),
                ('headshot', models.BooleanField(blank=True, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('drill', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='scoring.drill')),
                ('firearm', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='scoring.firearm')),
                ('shooter', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='scoring.shooter')),
                ('string', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='scoring.string')),
            ],
            options={
                'db_table': 'score',
            },
        ),
        migrations.CreateModel(
            name='History',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('event_date', models.DateField(auto_now_add=True)),
                ('count', models.PositiveIntegerField(default=1)),
                ('location', models.CharField(max_length=255)),
                ('drill', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='scoring.drill')),
            ],
            options={
                'db_table': 'history',
            },
        ),
        migrations.AddField(
            model_name='drill',
            name='skill_type',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='scoring.skill'),
        ),
        migrations.AddConstraint(
            model_name='string',
            constraint=models.UniqueConstraint(fields=('drill', 'seqno'), name='unique_drill_seqno'),
        ),
        migrations.AddConstraint(
            model_name='history',
            constraint=models.UniqueConstraint(fields=('event_date', 'drill'), name='unique_drill_event_date'),
        ),
    ]
